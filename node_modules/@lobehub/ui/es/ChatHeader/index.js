'use client';

import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["left", "right", "className", "styles", "gaps", "classNames", "showBackButton", "onBackClick", "children", "gap"];
import { ChevronLeft } from 'lucide-react';
import { memo } from 'react';
import { Flexbox } from 'react-layout-kit';
import ActionIcon from "../ActionIcon";
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var ChatHeader = /*#__PURE__*/memo(function (_ref) {
  var left = _ref.left,
    right = _ref.right,
    className = _ref.className,
    contentStyles = _ref.styles,
    gaps = _ref.gaps,
    classNames = _ref.classNames,
    showBackButton = _ref.showBackButton,
    onBackClick = _ref.onBackClick,
    children = _ref.children,
    _ref$gap = _ref.gap,
    gap = _ref$gap === void 0 ? 16 : _ref$gap,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useStyles = useStyles(),
    cx = _useStyles.cx,
    styles = _useStyles.styles;
  return /*#__PURE__*/_jsxs(Flexbox, _objectSpread(_objectSpread({
    align: 'center',
    className: cx(styles.container, className),
    distribution: 'space-between',
    gap: gap,
    horizontal: true,
    paddingInline: 16
  }, rest), {}, {
    children: [/*#__PURE__*/_jsxs(Flexbox, {
      align: 'center',
      className: cx(styles.left, classNames === null || classNames === void 0 ? void 0 : classNames.left),
      gap: (gaps === null || gaps === void 0 ? void 0 : gaps.left) || 12,
      horizontal: true,
      justify: 'flex-start',
      style: contentStyles === null || contentStyles === void 0 ? void 0 : contentStyles.left,
      children: [showBackButton && /*#__PURE__*/_jsx(ActionIcon, {
        icon: ChevronLeft,
        onClick: function onClick() {
          return onBackClick === null || onBackClick === void 0 ? void 0 : onBackClick();
        },
        size: {
          fontSize: 24
        },
        style: {
          marginRight: gaps !== null && gaps !== void 0 && gaps.left ? -gaps.left / 2 : -6
        }
      }), left]
    }), children && /*#__PURE__*/_jsx(Flexbox, {
      align: 'center',
      className: cx(styles.center, classNames === null || classNames === void 0 ? void 0 : classNames.center),
      gap: (gaps === null || gaps === void 0 ? void 0 : gaps.center) || 8,
      horizontal: true,
      justify: 'center',
      style: contentStyles === null || contentStyles === void 0 ? void 0 : contentStyles.center,
      children: children
    }), /*#__PURE__*/_jsx(Flexbox, {
      align: 'center',
      className: cx(styles.right, classNames === null || classNames === void 0 ? void 0 : classNames.right),
      gap: (gaps === null || gaps === void 0 ? void 0 : gaps.right) || 8,
      horizontal: true,
      justify: 'flex-end',
      style: contentStyles === null || contentStyles === void 0 ? void 0 : contentStyles.right,
      children: right
    })]
  }));
});
export default ChatHeader;