import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;
import { createStyles } from 'antd-style';
import chroma from 'chroma-js';
export var useStyles = createStyles(function (_ref) {
  var css = _ref.css,
    token = _ref.token,
    prefixCls = _ref.prefixCls;
  return {
    avatar: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    position: relative;\n    border-radius: 50%;\n    transition: box-shadow 100ms ", ";\n\n    &:hover {\n      box-shadow: 0 0 0 3px ", ";\n    }\n  "])), token.motionEaseOut, token.colorText),
    editor: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n    overflow: hidden;\n    border: 1px solid ", ";\n    border-radius: ", "px;\n  "])), token.colorBorder, token.borderRadiusLG),
    loading: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n    position: absolute;\n    z-index: 1;\n    inset: 0;\n\n    background: ", ";\n    border-radius: 50%;\n  "])), token.colorBgMask),
    picker: css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n    position: relative;\n\n    em-emoji-picker {\n      --rgb-accent: ", ";\n      --shadow: none;\n      --rgb-background: none;\n      --border-radius: 0;\n    }\n  "])), chroma(token.colorPrimary).rgb().join(',')),
    popover: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n    .", "-popover-inner {\n      padding: 0;\n    }\n  "])), prefixCls)
  };
});