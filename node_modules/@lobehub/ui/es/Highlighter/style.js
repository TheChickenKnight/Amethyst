import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref, type) {
  var token = _ref.token,
    css = _ref.css,
    cx = _ref.cx,
    prefixCls = _ref.prefixCls,
    stylish = _ref.stylish;
  var prefix = "".concat(prefixCls, "-highlighter");
  var buttonHoverCls = "".concat(prefix, "-hover-btn");
  var langHoverCls = "".concat(prefix, "-hover-lang");
  var typeStylish = css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      background-color: ", ";\n      border: 1px solid ", ";\n\n      &:hover {\n        background-color: ", ";\n      }\n    "])), type === 'block' ? token.colorFillTertiary : 'transparent', type === 'block' ? 'transparent' : token.colorBorder, type === 'block' ? token.colorFillTertiary : token.colorFillQuaternary);
  return {
    button: cx(buttonHoverCls, css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n          position: absolute;\n          z-index: 2;\n          inset-block-start: ", ";\n          inset-inline-end: ", ";\n\n          opacity: 0;\n        "])), type === 'pure' ? 0 : '8px', type === 'pure' ? 0 : '8px')),
    container: cx(prefix, type !== 'pure' && typeStylish, css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n          position: relative;\n          overflow: hidden;\n          border-radius: ", "px;\n          transition: background-color 100ms ", ";\n\n          &:hover {\n            .", " {\n              opacity: 1;\n            }\n\n            .", " {\n              opacity: 1;\n            }\n          }\n\n          .prism-code {\n            background: none !important;\n          }\n\n          pre {\n            overflow: auto hidden;\n\n            margin: 0 !important;\n            padding: ", " !important;\n\n            white-space: break-spaces;\n\n            background: none !important;\n          }\n\n          code {\n            background: transparent !important;\n          }\n        "])), token.borderRadius, token.motionEaseOut, buttonHoverCls, langHoverCls, type === 'pure' ? 0 : "16px")),
    header: css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n        position: relative;\n        padding-block: 4px;\n        padding-inline: 8px;\n        background: ", ";\n      "])), token.colorFillQuaternary),
    lang: cx(langHoverCls, stylish.blur, css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n          position: absolute;\n          z-index: 2;\n          inset-block-end: 8px;\n          inset-inline-end: 0;\n\n          font-family: ", ";\n          color: ", ";\n\n          opacity: 0;\n\n          transition: opacity 0.1s;\n        "])), token.fontFamilyCode, token.colorTextSecondary)),
    nowrap: css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n        code {\n          text-wrap: nowrap !important;\n        }\n      "]))),
    scroller: css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n        overflow: auto;\n        width: 100%;\n        height: 100%;\n      "]))),
    select: css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n        user-select: none;\n\n        position: absolute;\n        inset-inline-start: 50%;\n        transform: translateX(-50%);\n\n        min-width: 100px;\n\n        font-size: 14px;\n        color: ", ";\n        text-align: center;\n        .", "-select-selection-item {\n          min-width: 100px;\n          padding-inline-end: 0 !important;\n          color: ", ";\n          text-align: center;\n        }\n      "])), token.colorTextDescription, prefixCls, token.colorTextDescription)
  };
});