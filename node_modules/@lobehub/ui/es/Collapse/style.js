import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14;
import { createStyles } from 'antd-style';
export var useStyles = createStyles(function (_ref, _ref2) {
  var css = _ref.css,
    cx = _ref.cx,
    token = _ref.token,
    isDarkMode = _ref.isDarkMode,
    prefixCls = _ref.prefixCls;
  var isSplit = _ref2.isSplit,
    bodyPadding = _ref2.bodyPadding,
    headerPadding = _ref2.headerPadding;
  var pureStyle = css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      background: transparent;\n      border-radius: 0;\n\n      .", "-collapse-header {\n        padding-inline: 0 !important;\n        background: transparent !important;\n      }\n\n      .", "-collapse-content {\n        background: transparent;\n        border-color: ", ";\n      }\n\n      .", "-collapse-content-box {\n        padding-inline: 2px !important;\n        background: transparent;\n        border-radius: 0;\n      }\n    "])), prefixCls, prefixCls, token.colorFillSecondary, prefixCls);
  var blockStyle = cx(css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n        background: transparent !important;\n        .", "-collapse-item {\n          background: ", " !important;\n        }\n\n        .", "-collapse-header {\n          background: ", " !important;\n        }\n      "])), prefixCls, token.colorFillQuaternary, prefixCls, token.colorFillTertiary), isSplit ? css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n            .", "-collapse-item {\n              overflow: hidden;\n              border-radius: ", "px !important;\n            }\n          "])), prefixCls, token.borderRadiusLG) : css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n            border-radius: ", "px;\n          "])), token.borderRadiusLG));
  var ghostStyle = cx(css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n        background: transparent;\n\n        .", "-collapse-header {\n          background: transparent !important;\n        }\n\n        .", "-collapse-content-box {\n          background: transparent;\n        }\n      "])), prefixCls, prefixCls), isSplit ? css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n            .", "-collapse-item {\n              overflow: hidden;\n              border: 1px solid ", " !important;\n              border-radius: ", "px !important;\n              &.", "-collapse-item-active {\n                .", "-collapse-content-box {\n                  border-block-start: 1px solid ", " !important;\n                }\n              }\n            }\n          "])), prefixCls, token.colorBorderSecondary, token.borderRadiusLG, prefixCls, prefixCls, token.colorBorderSecondary) : css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n            .", "-collapse-item:not(:first-child) {\n              .", "-collapse-header {\n                border-block-start: 1px solid ", ";\n              }\n            }\n          "])), prefixCls, prefixCls, token.colorBorderSecondary));
  var defaultStyle = cx(css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n        background: transparent !important;\n        .", "-collapse-item {\n          background: transparent !important;\n        }\n\n        .", "-collapse-header {\n          background: ", " !important;\n        }\n      "])), prefixCls, prefixCls, token.colorFillTertiary), isSplit ? css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n            background: transparent;\n            .", "-collapse-item {\n              overflow: hidden;\n              border: 1px solid ", " !important;\n              border-radius: ", "px !important;\n            }\n          "])), prefixCls, token.colorBorderSecondary, token.borderRadiusLG) : css(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n            border-radius: ", "px;\n            .", "-collapse-item:not(:first-child) {\n              .", "-collapse-header {\n                border-block-start: 1px solid ", ";\n              }\n            }\n          "])), token.borderRadiusLG, prefixCls, prefixCls, token.colorBorderSecondary));
  return {
    blockStyle: blockStyle,
    defaultStyle: defaultStyle,
    flatGroup: css(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n        overflow: hidden;\n        padding-inline: 16px;\n      "]))),
    ghostStyle: ghostStyle,
    group: cx(isDarkMode && css(_templateObject12 || (_templateObject12 = _taggedTemplateLiteral(["\n            .", "-collapse-content {\n              background: transparent;\n              border-color: ", ";\n            }\n\n            .", "-collapse-header {\n              background: ", ";\n            }\n          "])), prefixCls, token.colorBorderSecondary, prefixCls, token.colorFillTertiary), css(_templateObject13 || (_templateObject13 = _taggedTemplateLiteral(["\n          overflow: hidden;\n          display: flex;\n          flex: none;\n          flex-direction: column;\n\n          .", "-collapse-item {\n            border: none;\n          }\n\n          .", "-collapse-extra {\n            margin-inline-start: 16px;\n          }\n\n          .", "-collapse-header {\n            align-items: center !important;\n            padding: ", " !important;\n            border-radius: 0 !important;\n          }\n\n          .", "-collapse-content-box {\n            padding: ", " !important;\n          }\n\n          .", "-form-item-label {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n          }\n        "])), prefixCls, prefixCls, prefixCls, typeof headerPadding === 'string' ? headerPadding : "".concat(headerPadding, "px"), prefixCls, typeof bodyPadding === 'string' ? bodyPadding : "".concat(bodyPadding, "px"), prefixCls)),
    icon: css(_templateObject14 || (_templateObject14 = _taggedTemplateLiteral(["\n        transition: all 100ms ", ";\n      "])), token.motionEaseOut),
    pureStyle: pureStyle
  };
});