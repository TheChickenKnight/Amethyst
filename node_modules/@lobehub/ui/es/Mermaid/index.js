import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "copyButtonSize", "fullFeatured", "copyable", "showLanguage", "style", "type", "className", "bodyRender", "actionsRender"];
import { memo } from 'react';
import { Flexbox } from 'react-layout-kit';
import CopyButton from "../CopyButton";
import Tag from "../Tag";
import FullFeatured from "./FullFeatured";
import { useStyles } from "./style";
import { useMermaid } from "./useMermaid";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var Mermaid = /*#__PURE__*/memo(function (_ref) {
  var children = _ref.children,
    _ref$copyButtonSize = _ref.copyButtonSize,
    copyButtonSize = _ref$copyButtonSize === void 0 ? 'site' : _ref$copyButtonSize,
    fullFeatured = _ref.fullFeatured,
    _ref$copyable = _ref.copyable,
    copyable = _ref$copyable === void 0 ? true : _ref$copyable,
    _ref$showLanguage = _ref.showLanguage,
    showLanguage = _ref$showLanguage === void 0 ? true : _ref$showLanguage,
    style = _ref.style,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? 'block' : _ref$type,
    className = _ref.className,
    bodyRender = _ref.bodyRender,
    actionsRender = _ref.actionsRender,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useStyles = useStyles(type),
    cx = _useStyles.cx,
    styles = _useStyles.styles;
  var MermaidRender = useMermaid(children);
  var originalActions = copyable && /*#__PURE__*/_jsx(CopyButton, {
    content: children,
    placement: "left",
    size: copyButtonSize
  });
  var actions = actionsRender ? actionsRender({
    actionIconSize: copyButtonSize,
    content: children,
    originalNode: originalActions
  }) : originalActions;
  var defaultBody = /*#__PURE__*/_jsx(MermaidRender, {});
  var body = bodyRender ? bodyRender({
    content: children,
    originalNode: defaultBody
  }) : defaultBody;
  if (fullFeatured) return /*#__PURE__*/_jsx(FullFeatured, _objectSpread(_objectSpread({
    actionsRender: actionsRender,
    bodyRender: bodyRender,
    className: className,
    content: children,
    copyable: copyable,
    showLanguage: showLanguage,
    style: style,
    type: type
  }, rest), {}, {
    children: body
  }));
  return /*#__PURE__*/_jsxs("div", _objectSpread(_objectSpread({
    className: cx(styles.container, className),
    "data-code-type": "mermaid",
    style: style
  }, rest), {}, {
    children: [/*#__PURE__*/_jsx(Flexbox, {
      align: 'center',
      className: styles.button,
      flex: 'none',
      gap: 4,
      horizontal: true,
      children: actions
    }), showLanguage && /*#__PURE__*/_jsx(Tag, {
      className: styles.lang,
      children: "mermaid"
    }), /*#__PURE__*/_jsx("div", {
      className: styles.scroller,
      children: body
    })]
  }));
});
export default Mermaid;